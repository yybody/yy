<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yy.DAO.AppraiseMapper">
  <resultMap id="BaseResultMap" type="com.yy.POJO.Appraise">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="gid" jdbcType="INTEGER" property="gid" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yy.POJO.Appraise">
    <result column="appraise" jdbcType="LONGVARCHAR" property="appraise" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, gid, pic
  </sql>
  <sql id="Blob_Column_List">
    appraise
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yy.POJO.AppraiseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yy.POJO.AppraiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from appraise
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appraise
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yy.POJO.AppraiseExample">
    delete from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yy.POJO.Appraise">
    insert into appraise (aid, gid, pic, 
      appraise)
    values (#{aid,jdbcType=INTEGER}, #{gid,jdbcType=INTEGER}, #{pic,jdbcType=VARCHAR}, 
      #{appraise,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yy.POJO.Appraise">
    insert into appraise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="gid != null">
        gid,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="appraise != null">
        appraise,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="appraise != null">
        #{appraise,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yy.POJO.AppraiseExample" resultType="java.lang.Long">
    select count(*) from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appraise
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.appraise != null">
        appraise = #{record.appraise,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update appraise
    set aid = #{record.aid,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR},
      appraise = #{record.appraise,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appraise
    set aid = #{record.aid,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yy.POJO.Appraise">
    update appraise
    <set>
      <if test="gid != null">
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="appraise != null">
        appraise = #{appraise,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yy.POJO.Appraise">
    update appraise
    set gid = #{gid,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR},
      appraise = #{appraise,jdbcType=LONGVARCHAR}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yy.POJO.Appraise">
    update appraise
    set gid = #{gid,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>